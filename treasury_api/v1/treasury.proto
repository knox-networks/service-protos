//
// Â©  2025 Knox Networks, Inc. All rights reserved.
//
// This software is the confidential and proprietary information of Knox Networks, Inc. You  shall
// not disclose such confidential Information and shall use it only in accordance with the terms of
// the license agreement you entered into with Knox Networks, Inc. This software may include third-
// party components, which are subject to their own license terms. By using this software, you
// agree to comply with those terms.
//
// Unauthorized copying of this file, via any medium is strictly prohibited.
//

syntax = "proto3";

package treasury;

import "common/v1/common.proto";

// THIS PROTO FILE IS INTENDED FOR USE FOR KNOX AND KNOX CUSTOMERS.

// Requests the count of files of various denominations for a given currency.
/* [Example]
{
  "asset_code": "USD"
}
*/
message GetSupplyRequest {
  // The currency code of the requested supply.
  string asset_code = 1;
  // [MultibaseVerifier] Treasury verifier.
  string verifier   = 2;
}

// Lists the count of the files of specific denominations held in the Treasury service's vault, and the total value held
// in files of that denomination.
/* [Example]
{
  "denomination": {
    "asset_code":"USD",
    "amount":2000,
    "decimals":2
  },
  "count": 5,
  "total": {
    "asset_code":"USD",
    "amount":10000,
    "decimals":2
  }
}
*/
message DenominationCount {
  // The amount of the denomination.
  common.Amount denomination = 1;
  // The number of digital banknotes of this amount held in supply.
  uint32 count               = 2;
  // The total value represented by digital banknotes of this denomination.
  common.Amount total        = 3;
}

// Provides a list of file denominations in the Treasury service's Vault.
/* [Example]
{
  "supply": [
    {
      "denomination": {
        "asset_code": "USD",
        "amount": 2000,
        "decimals": 2
      },
      "count": 5,
      "total": {
        "asset_code": "USD",
        "amount": 10000,
        "decimals": 2
      }
    },
    {
      "denomination": {
        "asset_code": "USD",
        "amount": 1000,
        "decimals": 2
      },
      "count": 5,
      "total": {
        "asset_code": "USD",
        "amount": 5000,
        "decimals": 2
      }
    }
  ],
  "total": {
    "asset_code": "USD",
    "amount": 15000,
    "decimals": 2
  }
}
*/
message GetSupplyResponse {
  // A list of denomination counts of the digital banknotes held in supply.
  repeated DenominationCount supply = 1;
  // grand total sum of all promissories
  common.Amount total               = 2;
}

// The Treasury application implements value added functions that may be offered by the financial institution. APIs
// defined here are limited to those that are exclusively exposed via the Treasury service, e.g. APIs to manage currency
// supply of the treasury and APIs for remittance. Where functions are offered as part of a Transaction service, the
// APIs can be found under the Transaction Service.
service Treasury {
  // Get a list of denomination counts of the digital banknotes held in the Treasury service's vault.
  rpc GetSupply(GetSupplyRequest) returns (GetSupplyResponse);
}
